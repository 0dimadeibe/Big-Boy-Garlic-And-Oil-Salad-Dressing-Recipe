image:
  - Ubuntu
  - Visual Studio 2019

environment:
  matrix:
    - BUILD_TYPE: Debug
    - BUILD_TYPE: Release

install:
  - sh: sudo add-apt-repository ppa:hnakamur/icu
  - sh: sudo add-apt-repository ppa:hnakamur/boost
  - sh: sudo apt update
  - sh: sudo apt install -y cmake libssl-dev libavdevice-dev libboost-thread1.67-dev libboost-filesystem1.67-dev libboost-log1.67-dev libpulse-dev libopus-dev libxtst-dev libx11-dev libxfixes-dev libevdev-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev
  - sh: sudo update-alternatives --set gcc /usr/bin/gcc-8
  - cmd: C:\msys64\usr\bin\bash -lc "pacman --needed --noconfirm -S mingw-w64-x86_64-openssl mingw-w64-x86_64-cmake mingw-w64-x86_64-toolchain mingw-w64-x86_64-opus mingw-w64-x86_64-x265 mingw-w64-x86_64-boost git yasm nasm diffutils make"

before_build:
  - git submodule update --init --recursive
  - mkdir build
  - cd build

build_script:
  - cmd: set OLDPATH=%PATH%
  - cmd: set PATH=C:\msys64\mingw64\bin
  - sh: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSUNSHINE_ASSETS_DIR=/etc/sunshine ..
  - cmd: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DOPENSSL_ROOT_DIR=C:\OpenSSL-v111-Win64 -DSUNSHINE_STANDALONE=ON -DSUNSHINE_ASSETS_DIR=assets -G "MinGW Makefiles" ..
  - sh: make -j$(nproc)
  - cmd: mingw32-make -j2
  - cmd: set PATH=%OLDPATH%

after_build:
  - cmd: 7z a Sunshine-Windows.zip ..\assets\
  - cmd: 7z a Sunshine-Windows.zip sunshine.exe
  - cmd: 7z a Sunshine-Windows.zip tools\dxgi-info.exe
  - cmd: 7z a Sunshine-Windows.zip tools\audio-info.exe
  - cmd: appveyor PushArtifact Sunshine-Windows.zip
